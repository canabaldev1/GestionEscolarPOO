/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package Vistas.Gui.Formularios.Alumno;

import Dominio.Alumno;
import Dominio.Constantes.ParentescoAcudiente;
import Dto.AlumnoDto;
import Vistas.Gui.Formularios.Extras.FormateoDeFechas;
import java.awt.Frame;
import java.time.LocalDate;
import java.util.Properties;
import javax.swing.JOptionPane;
import org.jdatepicker.impl.JDatePanelImpl;
import org.jdatepicker.impl.JDatePickerImpl;
import org.jdatepicker.impl.UtilDateModel;

/**
 *
 * @author lm-carlos
 */
public class AlumnoFormulario extends javax.swing.JDialog {

    /**
     * Creates new form AlumnoFormulario
     */
    private JDatePickerImpl datePicker;

    public AlumnoFormulario(java.awt.Frame parent, boolean modal) {

        super(parent, modal);
        initComponents();

        UtilDateModel model = new UtilDateModel();
        model.setSelected(true);  // para mostrar la fecha actual

        Properties p = new Properties();
        p.put("text.today", "Hoy");
        p.put("text.month", "Mes");
        p.put("text.year", "Año");

        // Crear el panel de fecha y el picker
        JDatePanelImpl datePanel = new JDatePanelImpl(model, p);
        datePicker = new JDatePickerImpl(datePanel, new FormateoDeFechas());

        panelFechaNacimiento.setLayout(new java.awt.BorderLayout()); // o usa FlowLayout si prefieres
        panelFechaNacimiento.add(datePicker);
        panelFechaNacimiento.revalidate();  // refresca el panel
        panelFechaNacimiento.repaint();     // vuelve a dibujar el panel
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        botonAgregar = new javax.swing.JButton();
        botonBuscar = new javax.swing.JButton();
        botonEditar = new javax.swing.JButton();
        botonEliminar = new javax.swing.JButton();
        botonLimpiar = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        panelFechaNacimiento = new javax.swing.JPanel();
        campoTelefono = new javax.swing.JTextField();
        campoNombreAcudiente = new javax.swing.JTextField();
        campoApellidoAcudiente = new javax.swing.JTextField();
        selectorParentesco = new javax.swing.JComboBox<>();
        campoNombre = new javax.swing.JTextField();
        campoApellido = new javax.swing.JTextField();
        campoPassword = new javax.swing.JPasswordField();
        campoEmail = new javax.swing.JTextField();
        campoDireccion = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        campoId = new javax.swing.JTextField();
        etiquetaError = new javax.swing.JLabel();
        botonListar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        botonAgregar.setText("Agregar");
        botonAgregar.setMargin(new java.awt.Insets(0, 0, 0, 0));
        botonAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregar(evt);
            }
        });

        botonBuscar.setText("Buscar");
        botonBuscar.setMargin(new java.awt.Insets(0, 0, 0, 0));
        botonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscar(evt);
            }
        });

        botonEditar.setText("Editar");
        botonEditar.setMargin(new java.awt.Insets(0, 0, 0, 0));
        botonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editar(evt);
            }
        });

        botonEliminar.setText("Eliminar");
        botonEliminar.setMargin(new java.awt.Insets(0, 0, 0, 0));
        botonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminar(evt);
            }
        });

        botonLimpiar.setText("Limpiar");
        botonLimpiar.setMargin(new java.awt.Insets(0, 0, 0, 0));
        botonLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiar(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Arial Black", 0, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 204));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Formulario Alumno");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setText("Nombre");

        jLabel2.setText("Apellido");

        jLabel3.setText("Contraseña");

        jLabel4.setText("Email");

        jLabel5.setText("Fecha de nacimiento");

        jLabel6.setText("Dirección");

        jLabel7.setText("Teléfono");

        jLabel8.setText("Nombre acudiente");

        jLabel9.setText("Apellido del acudiente");

        jLabel10.setText("Parentesco");

        javax.swing.GroupLayout panelFechaNacimientoLayout = new javax.swing.GroupLayout(panelFechaNacimiento);
        panelFechaNacimiento.setLayout(panelFechaNacimientoLayout);
        panelFechaNacimientoLayout.setHorizontalGroup(
            panelFechaNacimientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panelFechaNacimientoLayout.setVerticalGroup(
            panelFechaNacimientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 24, Short.MAX_VALUE)
        );

        selectorParentesco.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PADRE", "MADRE", "HERMANO", "HERMANA", "ABUELO", "ABUELA", "TIO", "TIA", "OTRO", "TUTOR_LEGAL" }));
        selectorParentesco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectorParentescoActionPerformed(evt);
            }
        });

        campoNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoNombreActionPerformed(evt);
            }
        });

        campoEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoEmailActionPerformed(evt);
            }
        });

        jLabel12.setText("Código");

        campoId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoIdActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel10)
                    .addComponent(jLabel9)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel1)
                            .addComponent(jLabel12)))
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(campoPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                        .addComponent(campoEmail)
                        .addComponent(campoNombre)
                        .addComponent(campoApellido)
                        .addComponent(panelFechaNacimiento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(campoDireccion, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(selectorParentesco, javax.swing.GroupLayout.Alignment.LEADING, 0, 187, Short.MAX_VALUE)
                        .addComponent(campoApellidoAcudiente, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(campoNombreAcudiente, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(campoId, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(campoTelefono, javax.swing.GroupLayout.Alignment.LEADING)))
                .addGap(0, 17, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(campoId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(panelFechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoNombreAcudiente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoApellidoAcudiente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectorParentesco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                .addContainerGap())
        );

        etiquetaError.setForeground(new java.awt.Color(255, 0, 51));
        etiquetaError.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        botonListar.setText("Listar");
        botonListar.setMargin(new java.awt.Insets(0, 0, 0, 0));
        botonListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonListar(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(botonAgregar, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(botonBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(botonEditar, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE))
                    .addComponent(etiquetaError, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(botonEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(23, 23, 23)
                        .addComponent(botonListar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(botonLimpiar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(etiquetaError, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botonEliminar, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(botonLimpiar, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(botonAgregar, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(botonListar, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(botonBuscar, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(botonEditar, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(44, 44, 44))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void campoEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoEmailActionPerformed

    private void selectorParentescoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectorParentescoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_selectorParentescoActionPerformed

    private void campoNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoNombreActionPerformed

    private void campoIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoIdActionPerformed

    private void buscar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscar
        // TODO add your handling code here:
        etiquetaError.setText("");

        try {
            AlumnoDto alumnoDto = new AlumnoDto();
            String campoIdTexto = campoId.getText();
            Long id = Long.parseLong(campoIdTexto);

            Alumno alumnoBuscado = alumnoDto.buscar(id);

            // Validación básica
            if (alumnoBuscado == null || alumnoBuscado.getId() == null) {
                String message = "No se encontró ningún alumno con ese ID.";
                etiquetaError.setText("<html><body style='width: 180px;'>" + message + "</body></html>");
                return;
            }

            // Llenar campos
            campoNombre.setText(alumnoBuscado.getNombres());
            campoApellido.setText(alumnoBuscado.getApellidos());
            campoPassword.setText(alumnoBuscado.getContrasena());
            campoEmail.setText(alumnoBuscado.getEmail());
            campoDireccion.setText(alumnoBuscado.getDireccion());
            campoTelefono.setText(alumnoBuscado.getTelefono());
            campoNombreAcudiente.setText(alumnoBuscado.getNombreAcudiente());
            campoApellidoAcudiente.setText(alumnoBuscado.getApellidoAcudiente());
            selectorParentesco.setSelectedItem(alumnoBuscado.getParentesco().toString());

            // Establecer fecha en datePicker
            LocalDate fechaNacimiento = alumnoBuscado.getFechaNacimiento();
            if (fechaNacimiento != null) {
                datePicker.getModel().setDate(
                        fechaNacimiento.getYear(),
                        fechaNacimiento.getMonthValue() - 1,
                        fechaNacimiento.getDayOfMonth()
                );
                datePicker.getModel().setSelected(true);
            }

        } catch (NumberFormatException ex) {
            String message = "El ID debe ser un número válido.";
            etiquetaError.setText("<html><body style='width: 180px;'>" + message + "</body></html>");
        } catch (Exception e) {
            String message = "Ocurrió un error al buscar el alumno.";
            etiquetaError.setText("<html><body style='width: 180px;'>" + message + "</body></html>");
            e.printStackTrace();
        }

    }//GEN-LAST:event_buscar

    private void agregar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregar
        // TODO add your handling code here:

        etiquetaError.setText("");

        try {
            Alumno nuevoAlumno = new Alumno();

            nuevoAlumno.setNombres(campoNombre.getText());
            nuevoAlumno.setApellidos(campoApellido.getText());
            nuevoAlumno.setContrasena(campoPassword.getText());
            nuevoAlumno.setEmail(campoEmail.getText());
            nuevoAlumno.setDireccion(campoDireccion.getText());
            nuevoAlumno.setTelefono(campoTelefono.getText());
            nuevoAlumno.setNombreAcudiente(campoNombreAcudiente.getText());
            nuevoAlumno.setApellidoAcudiente(campoApellidoAcudiente.getText());

            String parentescoSeleccionado = (String) selectorParentesco.getSelectedItem();
            nuevoAlumno.setParentesco(ParentescoAcudiente.valueOf(parentescoSeleccionado));

            // Fecha de nacimiento desde el datePicker
            int year = datePicker.getModel().getYear();
            int month = datePicker.getModel().getMonth(); // enero = 0
            int day = datePicker.getModel().getDay();
            LocalDate fechaNacimiento = LocalDate.of(year, month + 1, day);
            nuevoAlumno.setFechaNacimiento(fechaNacimiento);

            // Aquí puedes agregar el parentesco si usas un JComboBox:
            // String parentesco = selectorParentesco.getSelectedItem().toString();
            // nuevoAlumno.setParentescoAcudiente(parentesco);
            AlumnoDto.guardar(nuevoAlumno);

            JOptionPane.showMessageDialog(this, "Alumno agregado con éxito.");

        } catch (Exception e) {
            etiquetaError.setText("<html><body style='width: 180px;'>" + e.getMessage() + "</body></html>");

            e.printStackTrace();
        }
    }//GEN-LAST:event_agregar

    private void editar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editar
        // TODO add your handling code here:
        etiquetaError.setText("");

        try {
            AlumnoDto alumnoDto = new AlumnoDto();
            String campoIdTexto = campoId.getText();
            Long id = Long.parseLong(campoIdTexto);

            Alumno alumnoBuscado = alumnoDto.buscar(id);

            // Validación básica
            if (alumnoBuscado == null || alumnoBuscado.getId() == null) {
                String message = "No se encontró ningún alumno con ese ID.";
                etiquetaError.setText("<html><body style='width: 180px;'>" + message + "</body></html>");
                return;
            }

            // Actualizar valores
            alumnoBuscado.setNombres(campoNombre.getText());
            alumnoBuscado.setApellidos(campoApellido.getText());
            alumnoBuscado.setContrasena(campoPassword.getText());
            alumnoBuscado.setEmail(campoEmail.getText());
            alumnoBuscado.setDireccion(campoDireccion.getText());
            alumnoBuscado.setTelefono(campoTelefono.getText());
            alumnoBuscado.setNombreAcudiente(campoNombreAcudiente.getText());
            alumnoBuscado.setApellidoAcudiente(campoApellidoAcudiente.getText());

            String parentescoSeleccionado = (String) selectorParentesco.getSelectedItem();
            alumnoBuscado.setParentesco(ParentescoAcudiente.valueOf(parentescoSeleccionado));

            int year = datePicker.getModel().getYear();
            int month = datePicker.getModel().getMonth(); // enero = 0
            int day = datePicker.getModel().getDay();
            LocalDate fechaNacimiento = LocalDate.of(year, month + 1, day);
            alumnoBuscado.setFechaNacimiento(fechaNacimiento);

            AlumnoDto.editar(alumnoBuscado);

            JOptionPane.showMessageDialog(this, "Alumno editado con éxito.");

        } catch (NumberFormatException ex) {
            String message = "El ID debe ser un número válido.";
            etiquetaError.setText("<html><body style='width: 180px;'>" + message + "</body></html>");
        } catch (Exception e) {
            String message = "Ocurrió un error al buscar el alumno.";
            etiquetaError.setText("<html><body style='width: 180px;'>" + message + "</body></html>");
            e.printStackTrace();
        }


    }//GEN-LAST:event_editar

    private void limpiar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiar
        // TODO add your handling code here:
        etiquetaError.setText("");

        campoId.setText("");
            campoNombre.setText("");
            campoApellido.setText("");
            campoPassword.setText("");
            campoEmail.setText("");
            campoDireccion.setText("");
            campoTelefono.setText("");
            campoNombreAcudiente.setText("");
            campoApellidoAcudiente.setText("");
            selectorParentesco.setSelectedItem(" ");

            // Establecer fecha en datePicker
            LocalDate hoy = LocalDate.now();

            if (hoy != null) {
                datePicker.getModel().setDate(
                        hoy.getYear(),
                        hoy.getMonthValue() - 1,
                        hoy.getDayOfMonth()
                );
                datePicker.getModel().setSelected(true);
            }
    }//GEN-LAST:event_limpiar

    private void eliminar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminar
        // TODO add your handling code here:
        etiquetaError.setText("");

        try {
            AlumnoDto alumnoDto = new AlumnoDto();
            String campoIdTexto = campoId.getText();
            Long id = Long.parseLong(campoIdTexto);

            Alumno alumnoBuscado = alumnoDto.buscar(id);

            // Validación básica
            if (alumnoBuscado == null || alumnoBuscado.getId() == null) {
                String message = "No se encontró ningún alumno con ese ID.";
                etiquetaError.setText("<html><body style='width: 180px;'>" + message + "</body></html>");
                return;
            }

            // Eliminar
            
            AlumnoDto.eliminar(id);

            JOptionPane.showMessageDialog(this, "Alumno eliminado con éxito.");

        } catch (NumberFormatException ex) {
            String message = "El ID debe ser un número válido.";
            etiquetaError.setText("<html><body style='width: 180px;'>" + message + "</body></html>");
        } catch (Exception e) {
            String message = "Ocurrió un error al buscar el alumno.";
            etiquetaError.setText("<html><body style='width: 180px;'>" + message + "</body></html>");
            e.printStackTrace();
        }

        
    }//GEN-LAST:event_eliminar

    private void botonListar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonListar
        // TODO add your handling code here:
        Frame frame = JOptionPane.getFrameForComponent(this);
        AlumnoTodosFormulario ventana = new AlumnoTodosFormulario(frame, false);
        ventana.setLocationRelativeTo(this);
        ventana.setVisible(true);
    }//GEN-LAST:event_botonListar

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AlumnoFormulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AlumnoFormulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AlumnoFormulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AlumnoFormulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AlumnoFormulario dialog = new AlumnoFormulario(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAgregar;
    private javax.swing.JButton botonBuscar;
    private javax.swing.JButton botonEditar;
    private javax.swing.JButton botonEliminar;
    private javax.swing.JButton botonLimpiar;
    private javax.swing.JButton botonListar;
    private javax.swing.JTextField campoApellido;
    private javax.swing.JTextField campoApellidoAcudiente;
    private javax.swing.JTextField campoDireccion;
    private javax.swing.JTextField campoEmail;
    private javax.swing.JTextField campoId;
    private javax.swing.JTextField campoNombre;
    private javax.swing.JTextField campoNombreAcudiente;
    private javax.swing.JPasswordField campoPassword;
    private javax.swing.JTextField campoTelefono;
    private javax.swing.JLabel etiquetaError;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel panelFechaNacimiento;
    private javax.swing.JComboBox<String> selectorParentesco;
    // End of variables declaration//GEN-END:variables
}
