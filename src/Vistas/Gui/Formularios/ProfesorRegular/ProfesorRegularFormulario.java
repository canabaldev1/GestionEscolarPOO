/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package Vistas.Gui.Formularios.ProfesorRegular;

import Vistas.Gui.Formularios.ProfesorRegular.*;
import Dominio.Constantes.EstadoEmpleado;
import Vistas.Gui.Formularios.ProfesorRegular.*;
import Dominio.ProfesorRegular;
import Dominio.Constantes.ParentescoAcudiente;
import Dominio.Constantes.TipoCuenta;
import Dto.ProfesorRegularDto;
import Vistas.Gui.Formularios.Extras.FormateoDeFechas;
import java.awt.Frame;
import java.time.LocalDate;
import java.util.Properties;
import javax.swing.JOptionPane;
import org.jdatepicker.impl.JDatePanelImpl;
import org.jdatepicker.impl.JDatePickerImpl;
import org.jdatepicker.impl.UtilDateModel;

/**
 *
 * @author lm-carlos
 */
public class ProfesorRegularFormulario extends javax.swing.JDialog {

    /**
     * Creates new form ProfesorRegularFormulario
     */
    private JDatePickerImpl datePickerNacimiento;
    private JDatePickerImpl datePickerIngreso;

    public ProfesorRegularFormulario(java.awt.Frame parent, boolean modal) {

        super(parent, modal);
        initComponents();

        UtilDateModel modelNacimiento = new UtilDateModel();
        modelNacimiento.setSelected(true);

        UtilDateModel modelIngreso = new UtilDateModel();
        modelIngreso.setSelected(true);

        Properties p = new Properties();
        p.put("text.today", "Hoy");
        p.put("text.month", "Mes");
        p.put("text.year", "Año");

        // Crear el panel Nacimiento
        JDatePanelImpl datePanelNacimiento = new JDatePanelImpl(modelNacimiento, p);
        datePickerNacimiento = new JDatePickerImpl(datePanelNacimiento, new FormateoDeFechas());

        panelFechaNacimiento1.setLayout(new java.awt.BorderLayout());
        panelFechaNacimiento1.add(datePickerNacimiento);
        panelFechaNacimiento1.revalidate();
        panelFechaNacimiento1.repaint();

        // Crear el panel Ingreso
        JDatePanelImpl datePanelIngreso = new JDatePanelImpl(modelIngreso, p);
        datePickerIngreso = new JDatePickerImpl(datePanelIngreso, new FormateoDeFechas());

        panelFechaIngreso.setLayout(new java.awt.BorderLayout());
        panelFechaIngreso.add(datePickerIngreso);
        panelFechaIngreso.revalidate();
        panelFechaIngreso.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        botonAgregar = new javax.swing.JButton();
        botonBuscar = new javax.swing.JButton();
        botonEditar = new javax.swing.JButton();
        botonEliminar = new javax.swing.JButton();
        botonLimpiar = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        panelFechaIngreso = new javax.swing.JPanel();
        campoTelefono = new javax.swing.JTextField();
        campoProfesion = new javax.swing.JTextField();
        campoNumeroCuenta = new javax.swing.JTextField();
        selectorTipoCuenta = new javax.swing.JComboBox<>();
        campoNombre = new javax.swing.JTextField();
        campoApellido = new javax.swing.JTextField();
        campoPassword = new javax.swing.JPasswordField();
        campoEmail = new javax.swing.JTextField();
        campoDireccion = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        campoId = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        selectorEstado = new javax.swing.JComboBox<>();
        panelFechaNacimiento1 = new javax.swing.JPanel();
        campoBanco = new javax.swing.JTextField();
        etiquetaError = new javax.swing.JLabel();
        botonListar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        botonAgregar.setText("Agregar");
        botonAgregar.setMargin(new java.awt.Insets(0, 0, 0, 0));
        botonAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregar(evt);
            }
        });

        botonBuscar.setText("Buscar");
        botonBuscar.setMargin(new java.awt.Insets(0, 0, 0, 0));
        botonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscar(evt);
            }
        });

        botonEditar.setText("Editar");
        botonEditar.setMargin(new java.awt.Insets(0, 0, 0, 0));
        botonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editar(evt);
            }
        });

        botonEliminar.setText("Eliminar");
        botonEliminar.setMargin(new java.awt.Insets(0, 0, 0, 0));
        botonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminar(evt);
            }
        });

        botonLimpiar.setText("Limpiar");
        botonLimpiar.setMargin(new java.awt.Insets(0, 0, 0, 0));
        botonLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiar(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Arial Black", 0, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 204));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Formulario Profesor Regular");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setText("Nombre");

        jLabel2.setText("Apellido");

        jLabel3.setText("Contraseña");

        jLabel4.setText("Email");

        jLabel5.setText("Fecha de nacimiento");

        jLabel6.setText("Dirección");

        jLabel7.setText("Teléfono");

        jLabel8.setText("Profesión");

        jLabel9.setText("Número cuenta");

        jLabel10.setText("Tipo cuenta");

        javax.swing.GroupLayout panelFechaIngresoLayout = new javax.swing.GroupLayout(panelFechaIngreso);
        panelFechaIngreso.setLayout(panelFechaIngresoLayout);
        panelFechaIngresoLayout.setHorizontalGroup(
            panelFechaIngresoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 187, Short.MAX_VALUE)
        );
        panelFechaIngresoLayout.setVerticalGroup(
            panelFechaIngresoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 24, Short.MAX_VALUE)
        );

        selectorTipoCuenta.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "AHORROS", "CORRIENTE" }));
        selectorTipoCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectorTipoCuentaActionPerformed(evt);
            }
        });

        campoNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoNombreActionPerformed(evt);
            }
        });

        campoEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoEmailActionPerformed(evt);
            }
        });

        jLabel12.setText("Código");

        campoId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoIdActionPerformed(evt);
            }
        });

        jLabel13.setText("Banco");

        jLabel14.setText("Fecha Ingreso");

        jLabel15.setText("Estado");

        selectorEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "ACTIVO", "INACTIVO", "VACACIONES", "LICENCIA", "SUSPENSION", "DESVINCULADO", "RETIRADO", "JUBILADO" }));
        selectorEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectorEstadoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelFechaNacimiento1Layout = new javax.swing.GroupLayout(panelFechaNacimiento1);
        panelFechaNacimiento1.setLayout(panelFechaNacimiento1Layout);
        panelFechaNacimiento1Layout.setHorizontalGroup(
            panelFechaNacimiento1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panelFechaNacimiento1Layout.setVerticalGroup(
            panelFechaNacimiento1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 24, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel14)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                            .addComponent(panelFechaIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel15)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(selectorEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel7)
                                .addComponent(jLabel8)
                                .addComponent(jLabel10)
                                .addComponent(jLabel9)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(2, 2, 2)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel1)
                                        .addComponent(jLabel12)))
                                .addComponent(jLabel5)
                                .addComponent(jLabel6))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(campoPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                                    .addComponent(campoEmail)
                                    .addComponent(campoNombre)
                                    .addComponent(campoApellido)
                                    .addComponent(campoDireccion, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(panelFechaNacimiento1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(selectorTipoCuenta, javax.swing.GroupLayout.Alignment.LEADING, 0, 187, Short.MAX_VALUE)
                                    .addComponent(campoNumeroCuenta, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(campoProfesion, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(campoId, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(campoTelefono, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(campoBanco, javax.swing.GroupLayout.Alignment.LEADING))))))
                .addGap(0, 17, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(campoId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(panelFechaNacimiento1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoProfesion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoNumeroCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectorTipoCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(campoBanco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel14)
                    .addComponent(panelFechaIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel15)
                    .addComponent(selectorEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3))
        );

        etiquetaError.setForeground(new java.awt.Color(255, 0, 51));
        etiquetaError.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        botonListar.setText("Listar");
        botonListar.setMargin(new java.awt.Insets(0, 0, 0, 0));
        botonListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonListar(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(botonAgregar, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(botonBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(botonEditar, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(etiquetaError, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(botonEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(23, 23, 23)
                        .addComponent(botonListar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(botonLimpiar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(etiquetaError, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botonEliminar, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(botonLimpiar, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(botonAgregar, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(botonListar, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(botonBuscar, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(botonEditar, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void campoEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoEmailActionPerformed

    private void campoNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoNombreActionPerformed

    private void campoIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoIdActionPerformed

    private void buscar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscar
        // TODO add your handling code here:
        etiquetaError.setText("");

        try {
            ProfesorRegularDto profesorRegularDto = new ProfesorRegularDto();
            String campoIdTexto = campoId.getText();
            Long id = Long.parseLong(campoIdTexto);

            ProfesorRegular profesorRegularBuscado = profesorRegularDto.buscar(id);

            // Validación básica
            if (profesorRegularBuscado == null || profesorRegularBuscado.getId() == null) {
                String message = "No se encontró ningún Profesor con ese ID.";
                etiquetaError.setText("<html><body style='width: 180px;'>" + message + "</body></html>");
                return;
            }

            // Llenar campos
            campoNombre.setText(profesorRegularBuscado.getNombres());
            campoApellido.setText(profesorRegularBuscado.getApellidos());
            campoPassword.setText(profesorRegularBuscado.getContrasena());
            campoEmail.setText(profesorRegularBuscado.getEmail());
            campoDireccion.setText(profesorRegularBuscado.getDireccion());
            campoTelefono.setText(profesorRegularBuscado.getTelefono());
            campoProfesion.setText(profesorRegularBuscado.getProfesion());
            campoNumeroCuenta.setText(profesorRegularBuscado.getNumeroCuentaBancaria());
            campoBanco.setText(profesorRegularBuscado.getBancoAsociado());

            selectorTipoCuenta.setSelectedItem(profesorRegularBuscado.getTipoCuentaBancaria().toString());
            selectorEstado.setSelectedItem(profesorRegularBuscado.getEstado().toString());

            // Establecer fecha de nacimiento
            LocalDate fechaNacimiento = profesorRegularBuscado.getFechaNacimiento();
            if (fechaNacimiento != null) {
                datePickerNacimiento.getModel().setDate(
                        fechaNacimiento.getYear(),
                        fechaNacimiento.getMonthValue() - 1,
                        fechaNacimiento.getDayOfMonth()
                );
                datePickerNacimiento.getModel().setSelected(true);
            }

            // Establecer fecha de ingreso
            LocalDate fechaIngreso = profesorRegularBuscado.getFechaIngreso();
            if (fechaIngreso != null) {
                datePickerIngreso.getModel().setDate(
                        fechaIngreso.getYear(),
                        fechaIngreso.getMonthValue() - 1,
                        fechaIngreso.getDayOfMonth()
                );
                datePickerIngreso.getModel().setSelected(true);
            }

        } catch (NumberFormatException ex) {
            String message = "El ID debe ser un número válido.";
            etiquetaError.setText("<html><body style='width: 180px;'>" + message + "</body></html>");
        } catch (Exception e) {
            String message = "Ocurrió un error al buscar el Profesor.";
            etiquetaError.setText("<html><body style='width: 180px;'>" + message + "</body></html>");
            e.printStackTrace();
        }

    }//GEN-LAST:event_buscar

    private void agregar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregar
        // TODO add your handling code here:

        etiquetaError.setText("");

        try {
            ProfesorRegular nuevoProfesorRegular = new ProfesorRegular();

            nuevoProfesorRegular.setNombres(campoNombre.getText());
            nuevoProfesorRegular.setApellidos(campoApellido.getText());
            nuevoProfesorRegular.setContrasena(campoPassword.getText());
            nuevoProfesorRegular.setEmail(campoEmail.getText());
            nuevoProfesorRegular.setDireccion(campoDireccion.getText());
            nuevoProfesorRegular.setTelefono(campoTelefono.getText());
            nuevoProfesorRegular.setProfesion(campoProfesion.getText());
            nuevoProfesorRegular.setNumeroCuentaBancaria(campoNumeroCuenta.getText());
            nuevoProfesorRegular.setBancoAsociado(campoBanco.getText());

            String tipoCuentaSeleccionada = (String) selectorTipoCuenta.getSelectedItem();
            nuevoProfesorRegular.setTipoCuentaBancaria(TipoCuenta.valueOf(tipoCuentaSeleccionada));

            String estadoSeleccionada = (String) selectorEstado.getSelectedItem();
            nuevoProfesorRegular.setEstado(EstadoEmpleado.valueOf(estadoSeleccionada));

            // Fecha de nacimiento desde el datePicker
            int yearNacimiento = datePickerNacimiento.getModel().getYear();
            int monthNacimiento = datePickerNacimiento.getModel().getMonth();
            int dayNacimiento = datePickerNacimiento.getModel().getDay();
            LocalDate fechaNacimiento = LocalDate.of(yearNacimiento, monthNacimiento + 1, dayNacimiento);
            nuevoProfesorRegular.setFechaNacimiento(fechaNacimiento);

            // Fecha de ingreso desde el datePicker
            int yearIngreso = datePickerIngreso.getModel().getYear();
            int monthIngreso = datePickerIngreso.getModel().getMonth();
            int dayIngreso = datePickerIngreso.getModel().getDay();
            LocalDate fechaIngreso = LocalDate.of(yearIngreso, monthIngreso + 1, dayIngreso);
            nuevoProfesorRegular.setFechaIngreso(fechaIngreso);

            ProfesorRegularDto.guardar(nuevoProfesorRegular);

            JOptionPane.showMessageDialog(this, "ProfesorRegular agregado con éxito.");

        } catch (Exception e) {
            etiquetaError.setText("<html><body style='width: 180px;'>" + e.getMessage() + "</body></html>");

            e.printStackTrace();
        }
    }//GEN-LAST:event_agregar

    private void editar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editar
        // TODO add your handling code here:
        etiquetaError.setText("");

        try {
            ProfesorRegularDto profesorRegularDto = new ProfesorRegularDto();
            String campoIdTexto = campoId.getText();
            Long id = Long.parseLong(campoIdTexto);

            ProfesorRegular profesorRegularBuscado = profesorRegularDto.buscar(id);

            // Validación básica
            if (profesorRegularBuscado == null || profesorRegularBuscado.getId() == null) {
                String message = "No se encontró ningún profesorRegular con ese ID.";
                etiquetaError.setText("<html><body style='width: 180px;'>" + message + "</body></html>");
                return;
            }

            // Actualizar valores
            profesorRegularBuscado.setNombres(campoNombre.getText());
            profesorRegularBuscado.setApellidos(campoApellido.getText());
            profesorRegularBuscado.setContrasena(campoPassword.getText());
            profesorRegularBuscado.setEmail(campoEmail.getText());
            profesorRegularBuscado.setDireccion(campoDireccion.getText());
            profesorRegularBuscado.setTelefono(campoTelefono.getText());
            profesorRegularBuscado.setProfesion(campoProfesion.getText());
            profesorRegularBuscado.setNumeroCuentaBancaria(campoNumeroCuenta.getText());
            profesorRegularBuscado.setBancoAsociado(campoBanco.getText());

            String tipoCuentaSeleccionada = (String) selectorTipoCuenta.getSelectedItem();
            profesorRegularBuscado.setTipoCuentaBancaria(TipoCuenta.valueOf(tipoCuentaSeleccionada));

            String estadoSeleccionada = (String) selectorEstado.getSelectedItem();
            profesorRegularBuscado.setEstado(EstadoEmpleado.valueOf(estadoSeleccionada));

            // Fecha de nacimiento desde el datePicker
            int yearNacimiento = datePickerNacimiento.getModel().getYear();
            int monthNacimiento = datePickerNacimiento.getModel().getMonth();
            int dayNacimiento = datePickerNacimiento.getModel().getDay();
            LocalDate fechaNacimiento = LocalDate.of(yearNacimiento, monthNacimiento + 1, dayNacimiento);
            profesorRegularBuscado.setFechaNacimiento(fechaNacimiento);

            // Fecha de ingreso desde el datePicker
            int yearIngreso = datePickerIngreso.getModel().getYear();
            int monthIngreso = datePickerIngreso.getModel().getMonth();
            int dayIngreso = datePickerIngreso.getModel().getDay();
            LocalDate fechaIngreso = LocalDate.of(yearIngreso, monthIngreso + 1, dayIngreso);
            profesorRegularBuscado.setFechaIngreso(fechaIngreso);

            ProfesorRegularDto.editar(profesorRegularBuscado);

            JOptionPane.showMessageDialog(this, "Profesor editado con éxito.");

        } catch (NumberFormatException ex) {
            String message = "El ID debe ser un número válido.";
            etiquetaError.setText("<html><body style='width: 180px;'>" + message + "</body></html>");
        } catch (Exception e) {
            String message = "Ocurrió un error al buscar el Profesor.";
            etiquetaError.setText("<html><body style='width: 180px;'>" + message + "</body></html>");
            e.printStackTrace();
        }


    }//GEN-LAST:event_editar

    private void limpiar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiar
        // TODO add your handling code here:
        etiquetaError.setText("");

        campoNombre.setText("");
        campoApellido.setText("");
        campoPassword.setText("");
        campoEmail.setText("");
        campoDireccion.setText("");
        campoTelefono.setText("");
        campoProfesion.setText("");
        campoNumeroCuenta.setText("");
        campoBanco.setText("");

        selectorTipoCuenta.setSelectedItem(" ");
        selectorEstado.setSelectedItem(" ");

        // Establecer fecha en datePicker
        LocalDate hoy = LocalDate.now();

        if (hoy != null) {
            datePickerNacimiento.getModel().setDate(
                    hoy.getYear(),
                    hoy.getMonthValue() - 1,
                    hoy.getDayOfMonth()
            );
            datePickerNacimiento.getModel().setSelected(true);

            datePickerIngreso.getModel().setDate(
                    hoy.getYear(),
                    hoy.getMonthValue() - 1,
                    hoy.getDayOfMonth()
            );
            datePickerIngreso.getModel().setSelected(true);
        }
    }//GEN-LAST:event_limpiar

    private void eliminar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminar
        // TODO add your handling code here:
        etiquetaError.setText("");

        try {
            ProfesorRegularDto profesorRegularDto = new ProfesorRegularDto();
            String campoIdTexto = campoId.getText();
            Long id = Long.parseLong(campoIdTexto);

            ProfesorRegular profesorRegularBuscado = profesorRegularDto.buscar(id);

            // Validación básica
            if (profesorRegularBuscado == null || profesorRegularBuscado.getId() == null) {
                String message = "No se encontró ningún profesor con ese ID.";
                etiquetaError.setText("<html><body style='width: 180px;'>" + message + "</body></html>");
                return;
            }

            // Eliminar
            ProfesorRegularDto.eliminar(id);

            JOptionPane.showMessageDialog(this, "Profesor eliminado con éxito.");

        } catch (NumberFormatException ex) {
            String message = "El ID debe ser un número válido.";
            etiquetaError.setText("<html><body style='width: 180px;'>" + message + "</body></html>");
        } catch (Exception e) {
            String message = "Ocurrió un error al buscar el profesor.";
            etiquetaError.setText("<html><body style='width: 180px;'>" + message + "</body></html>");
            e.printStackTrace();
        }


    }//GEN-LAST:event_eliminar

    private void botonListar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonListar
        // TODO add your handling code here:
        System.out.println("YYYYYYYYY");
        Frame frame = JOptionPane.getFrameForComponent(this);
        ProfesorRegularTodosFormulario ventana = new ProfesorRegularTodosFormulario(frame, false);
        ventana.setLocationRelativeTo(this);
        ventana.setVisible(true);
    }//GEN-LAST:event_botonListar

    private void selectorTipoCuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectorTipoCuentaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_selectorTipoCuentaActionPerformed

    private void selectorEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectorEstadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_selectorEstadoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProfesorRegularFormulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProfesorRegularFormulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProfesorRegularFormulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProfesorRegularFormulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ProfesorRegularFormulario dialog = new ProfesorRegularFormulario(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAgregar;
    private javax.swing.JButton botonBuscar;
    private javax.swing.JButton botonEditar;
    private javax.swing.JButton botonEliminar;
    private javax.swing.JButton botonLimpiar;
    private javax.swing.JButton botonListar;
    private javax.swing.JTextField campoApellido;
    private javax.swing.JTextField campoBanco;
    private javax.swing.JTextField campoDireccion;
    private javax.swing.JTextField campoEmail;
    private javax.swing.JTextField campoId;
    private javax.swing.JTextField campoNombre;
    private javax.swing.JTextField campoNumeroCuenta;
    private javax.swing.JPasswordField campoPassword;
    private javax.swing.JTextField campoProfesion;
    private javax.swing.JTextField campoTelefono;
    private javax.swing.JLabel etiquetaError;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel panelFechaIngreso;
    private javax.swing.JPanel panelFechaNacimiento1;
    private javax.swing.JComboBox<String> selectorEstado;
    private javax.swing.JComboBox<String> selectorTipoCuenta;
    // End of variables declaration//GEN-END:variables
}
