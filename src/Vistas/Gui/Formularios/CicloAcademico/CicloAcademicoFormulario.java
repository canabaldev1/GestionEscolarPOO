/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package Vistas.Gui.Formularios.CicloAcademico;

import Dominio.CicloAcademico;
import Dominio.Constantes.EstadoCicloAcademico;
import Dto.CicloAcademicoDto;
import Vistas.Gui.Formularios.Extras.FormateoDeFechas;
import java.awt.Frame;
import java.time.LocalDate;
import java.util.Properties;
import javax.swing.JOptionPane;
import org.jdatepicker.impl.JDatePanelImpl;
import org.jdatepicker.impl.JDatePickerImpl;
import org.jdatepicker.impl.UtilDateModel;

/**
 *
 * @author lm-carlos
 */
public class CicloAcademicoFormulario extends javax.swing.JDialog {

    /**
     * Creates new form CicloAcademicoFormulario
     */
    private JDatePickerImpl datePickerInicio;
    private JDatePickerImpl datePickerFin;

    public CicloAcademicoFormulario(java.awt.Frame parent, boolean modal) {

        super(parent, modal);
        initComponents();

        UtilDateModel modelInicio = new UtilDateModel();
        UtilDateModel modelFin = new UtilDateModel();
        
        modelInicio.setSelected(true);  // para mostrar la fecha actual
        modelFin.setSelected(true);  // para mostrar la fecha actual

        Properties p = new Properties();
        p.put("text.today", "Hoy");
        p.put("text.month", "Mes");
        p.put("text.year", "Año");

        // Crear el panel de fecha y el picker
        JDatePanelImpl datePanelInicio = new JDatePanelImpl(modelInicio, p);
        JDatePanelImpl datePanelFin = new JDatePanelImpl(modelFin, p);
        
        
        datePickerInicio = new JDatePickerImpl(datePanelInicio, new FormateoDeFechas());
        datePickerFin = new JDatePickerImpl(datePanelFin, new FormateoDeFechas());

        panelFechaInicio.setLayout(new java.awt.BorderLayout());
        panelFechaInicio.add(datePickerInicio);
        panelFechaInicio.revalidate();
        panelFechaInicio.repaint();

        panelFechaFin.setLayout(new java.awt.BorderLayout());
        panelFechaFin.add(datePickerFin);
        panelFechaFin.revalidate();
        panelFechaFin.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        botonAgregar = new javax.swing.JButton();
        botonBuscar = new javax.swing.JButton();
        botonEditar = new javax.swing.JButton();
        botonEliminar = new javax.swing.JButton();
        botonLimpiar = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        panelFechaInicio = new javax.swing.JPanel();
        selectorEstado = new javax.swing.JComboBox<>();
        campoAnio = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        campoId = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        panelFechaFin = new javax.swing.JPanel();
        etiquetaError = new javax.swing.JLabel();
        botonListar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        botonAgregar.setText("Agregar");
        botonAgregar.setMargin(new java.awt.Insets(0, 0, 0, 0));
        botonAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregar(evt);
            }
        });

        botonBuscar.setText("Buscar");
        botonBuscar.setMargin(new java.awt.Insets(0, 0, 0, 0));
        botonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscar(evt);
            }
        });

        botonEditar.setText("Editar");
        botonEditar.setMargin(new java.awt.Insets(0, 0, 0, 0));
        botonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editar(evt);
            }
        });

        botonEliminar.setText("Eliminar");
        botonEliminar.setMargin(new java.awt.Insets(0, 0, 0, 0));
        botonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminar(evt);
            }
        });

        botonLimpiar.setText("Limpiar");
        botonLimpiar.setMargin(new java.awt.Insets(0, 0, 0, 0));
        botonLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiar(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Arial Black", 0, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 204));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Formulario Ciclo Académico");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setText("Año");

        jLabel5.setText("Fecha de inicio");

        jLabel10.setText("Estado");

        javax.swing.GroupLayout panelFechaInicioLayout = new javax.swing.GroupLayout(panelFechaInicio);
        panelFechaInicio.setLayout(panelFechaInicioLayout);
        panelFechaInicioLayout.setHorizontalGroup(
            panelFechaInicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 187, Short.MAX_VALUE)
        );
        panelFechaInicioLayout.setVerticalGroup(
            panelFechaInicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 24, Short.MAX_VALUE)
        );

        selectorEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "EN_PROYECCION", "ACTUAL", "FINALIZADO" }));
        selectorEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectorEstadoActionPerformed(evt);
            }
        });

        campoAnio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoAnioActionPerformed(evt);
            }
        });

        jLabel12.setText("Código");

        campoId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoIdActionPerformed(evt);
            }
        });

        jLabel13.setText("Fecha de fin");

        javax.swing.GroupLayout panelFechaFinLayout = new javax.swing.GroupLayout(panelFechaFin);
        panelFechaFin.setLayout(panelFechaFinLayout);
        panelFechaFinLayout.setHorizontalGroup(
            panelFechaFinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panelFechaFinLayout.setVerticalGroup(
            panelFechaFinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 24, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(panelFechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1)
                    .addComponent(jLabel12)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel13))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(panelFechaFin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(selectorEstado, 0, 187, Short.MAX_VALUE)
                            .addComponent(campoAnio, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                            .addComponent(campoId, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 17, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(campoId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoAnio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(panelFechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(panelFechaFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectorEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                .addGap(23, 23, 23))
        );

        etiquetaError.setForeground(new java.awt.Color(255, 0, 51));
        etiquetaError.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        botonListar.setText("Listar");
        botonListar.setMargin(new java.awt.Insets(0, 0, 0, 0));
        botonListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonListar(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(botonAgregar, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(botonBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(botonEditar, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                        .addGap(29, 29, 29)
                        .addComponent(botonEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                        .addGap(23, 23, 23)
                        .addComponent(botonListar, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(botonLimpiar, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(etiquetaError, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(etiquetaError, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botonEliminar, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(botonLimpiar, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(botonAgregar, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(botonListar, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(botonBuscar, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(botonEditar, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void selectorEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectorEstadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_selectorEstadoActionPerformed

    private void campoAnioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoAnioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoAnioActionPerformed

    private void campoIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoIdActionPerformed

    private void buscar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscar
        // TODO add your handling code here:
        etiquetaError.setText("");

        try {
            CicloAcademicoDto cicloAcademicoDto = new CicloAcademicoDto();
            String campoIdTexto = campoId.getText();
            Long id = Long.parseLong(campoIdTexto);

            CicloAcademico cicloAcademicoBuscado = cicloAcademicoDto.buscar(id);

            // Validación básica
            if (cicloAcademicoBuscado == null || cicloAcademicoBuscado.getId() == null) {
                String message = "No se encontró ningún Ciclo Academico con ese ID.";
                etiquetaError.setText("<html><body style='width: 180px;'>" + message + "</body></html>");
                return;
            }

            // Llenar campos
            campoAnio.setText(String.valueOf(cicloAcademicoBuscado.getAnio()));
            selectorEstado.setSelectedItem(cicloAcademicoBuscado.getEstado().toString());

            // Establecer fecha de inicio en datePicker
            LocalDate fechaInicio = cicloAcademicoBuscado.getFechaInicio();
            if (fechaInicio != null) {
                datePickerInicio.getModel().setDate(
                        fechaInicio.getYear(),
                        fechaInicio.getMonthValue() - 1,
                        fechaInicio.getDayOfMonth()
                );
                datePickerInicio.getModel().setSelected(true);
            }

            // Establecer fecha de fin en datePicker
            LocalDate fechaFin = cicloAcademicoBuscado.getFechaFin();
            if (fechaFin != null) {
                datePickerFin.getModel().setDate(
                        fechaFin.getYear(),
                        fechaFin.getMonthValue() - 1,
                        fechaFin.getDayOfMonth()
                );
                datePickerFin.getModel().setSelected(true);
            }

        } catch (NumberFormatException ex) {
            String message = "El ID debe ser un número válido.";
            etiquetaError.setText("<html><body style='width: 180px;'>" + message + "</body></html>");
        } catch (Exception e) {
            String message = "Ocurrió un error al buscar el Ciclo Academico.";
            etiquetaError.setText("<html><body style='width: 180px;'>" + message + "</body></html>");
            e.printStackTrace();
        }

    }//GEN-LAST:event_buscar

    private void agregar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregar
        // TODO add your handling code here:

        etiquetaError.setText("");

        try {
            CicloAcademico nuevoCicloAcademico = new CicloAcademico();

            nuevoCicloAcademico.setAnio(Integer.parseInt(campoAnio.getText()));

            String estadoSeleccionado = (String) selectorEstado.getSelectedItem();
            nuevoCicloAcademico.setEstado(EstadoCicloAcademico.valueOf(estadoSeleccionado));

            // Fecha de inicio desde el datePicker
            int yearInicio = datePickerInicio.getModel().getYear();
            int monthInicio = datePickerInicio.getModel().getMonth();
            int dayInicio = datePickerInicio.getModel().getDay();
            LocalDate fechaInicio = LocalDate.of(yearInicio, monthInicio + 1, dayInicio);
            nuevoCicloAcademico.setFechaInicio(fechaInicio);

            // Fecha de fin desde el datePicker
            int yearFin = datePickerFin.getModel().getYear();
            int monthFin = datePickerFin.getModel().getMonth();
            int dayFin = datePickerFin.getModel().getDay();
            LocalDate fechaFin = LocalDate.of(yearFin, monthFin + 1, dayFin);
            nuevoCicloAcademico.setFechaFin(fechaFin);

            CicloAcademicoDto.guardar(nuevoCicloAcademico);

            JOptionPane.showMessageDialog(this, "Ciclo Academico agregado con éxito.");

        } catch (Exception e) {
            etiquetaError.setText("<html><body style='width: 180px;'>" + e.getMessage() + "</body></html>");

            e.printStackTrace();
        }
    }//GEN-LAST:event_agregar

    private void editar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editar
        // TODO add your handling code here:
        etiquetaError.setText("");

        try {
            CicloAcademicoDto cicloAcademicoDto = new CicloAcademicoDto();
            String campoIdTexto = campoId.getText();
            Long id = Long.parseLong(campoIdTexto);

            CicloAcademico cicloAcademicoBuscado = cicloAcademicoDto.buscar(id);

            // Validación básica
            if (cicloAcademicoBuscado == null || cicloAcademicoBuscado.getId() == null) {
                String message = "No se encontró ningún cicloAcademico con ese ID.";
                etiquetaError.setText("<html><body style='width: 180px;'>" + message + "</body></html>");
                return;
            }

            // Actualizar valores
            cicloAcademicoBuscado.setAnio(Integer.parseInt(campoAnio.getText()));

            String estadoSeleccionado = (String) selectorEstado.getSelectedItem();
            cicloAcademicoBuscado.setEstado(EstadoCicloAcademico.valueOf(estadoSeleccionado));

            // Fecha de inicio desde el datePicker
            int yearInicio = datePickerInicio.getModel().getYear();
            int monthInicio = datePickerInicio.getModel().getMonth();
            int dayInicio = datePickerInicio.getModel().getDay();
            LocalDate fechaInicio = LocalDate.of(yearInicio, monthInicio + 1, dayInicio);
            cicloAcademicoBuscado.setFechaInicio(fechaInicio);

            // Fecha de fin desde el datePicker
            int yearFin = datePickerFin.getModel().getYear();
            int monthFin = datePickerFin.getModel().getMonth();
            int dayFin = datePickerFin.getModel().getDay();
            LocalDate fechaFin = LocalDate.of(yearFin, monthFin + 1, dayFin);
            cicloAcademicoBuscado.setFechaFin(fechaFin);

            CicloAcademicoDto.editar(cicloAcademicoBuscado);

            JOptionPane.showMessageDialog(this, "Ciclo Academico editado con éxito.");

        } catch (NumberFormatException ex) {
            String message = "El ID debe ser un número válido.";
            etiquetaError.setText("<html><body style='width: 180px;'>" + message + "</body></html>");
        } catch (Exception e) {
            String message = "Ocurrió un error al buscar el Ciclo Academico.";
            etiquetaError.setText("<html><body style='width: 180px;'>" + message + "</body></html>");
            e.printStackTrace();
        }


    }//GEN-LAST:event_editar

    private void limpiar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiar
        // TODO add your handling code here:
        etiquetaError.setText("");

        campoId.setText("");
        campoAnio.setText("");
        selectorEstado.setSelectedItem(" ");

        // Establecer fecha en datePicker
        LocalDate hoy = LocalDate.now();

        if (hoy != null) {
            datePickerInicio.getModel().setDate(
                    hoy.getYear(),
                    hoy.getMonthValue() - 1,
                    hoy.getDayOfMonth()
            );
            datePickerInicio.getModel().setSelected(true);

            datePickerFin.getModel().setDate(
                    hoy.getYear(),
                    hoy.getMonthValue() - 1,
                    hoy.getDayOfMonth()
            );
            datePickerFin.getModel().setSelected(true);
        }
    }//GEN-LAST:event_limpiar

    private void eliminar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminar
        // TODO add your handling code here:
        etiquetaError.setText("");

        try {
            CicloAcademicoDto cicloAcademicoDto = new CicloAcademicoDto();
            String campoIdTexto = campoId.getText();
            Long id = Long.parseLong(campoIdTexto);

            CicloAcademico cicloAcademicoBuscado = cicloAcademicoDto.buscar(id);

            // Validación básica
            if (cicloAcademicoBuscado == null || cicloAcademicoBuscado.getId() == null) {
                String message = "No se encontró ningún Ciclo Academico con ese ID.";
                etiquetaError.setText("<html><body style='width: 180px;'>" + message + "</body></html>");
                return;
            }

            // Eliminar
            CicloAcademicoDto.eliminar(id);

            JOptionPane.showMessageDialog(this, "Ciclo Academico eliminado con éxito.");

        } catch (NumberFormatException ex) {
            String message = "El ID debe ser un número válido.";
            etiquetaError.setText("<html><body style='width: 180px;'>" + message + "</body></html>");
        } catch (Exception e) {
            String message = "Ocurrió un error al buscar el Ciclo Academico.";
            etiquetaError.setText("<html><body style='width: 180px;'>" + message + "</body></html>");
            e.printStackTrace();
        }


    }//GEN-LAST:event_eliminar

    private void botonListar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonListar
        // TODO add your handling code here:
        Frame frame = JOptionPane.getFrameForComponent(this);
        CicloAcademicoTodosFormulario ventana = new CicloAcademicoTodosFormulario(frame, false);
        ventana.setLocationRelativeTo(this);
        ventana.setVisible(true);
    }//GEN-LAST:event_botonListar

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CicloAcademicoFormulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CicloAcademicoFormulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CicloAcademicoFormulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CicloAcademicoFormulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CicloAcademicoFormulario dialog = new CicloAcademicoFormulario(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAgregar;
    private javax.swing.JButton botonBuscar;
    private javax.swing.JButton botonEditar;
    private javax.swing.JButton botonEliminar;
    private javax.swing.JButton botonLimpiar;
    private javax.swing.JButton botonListar;
    private javax.swing.JTextField campoAnio;
    private javax.swing.JTextField campoId;
    private javax.swing.JLabel etiquetaError;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel panelFechaFin;
    private javax.swing.JPanel panelFechaInicio;
    private javax.swing.JComboBox<String> selectorEstado;
    // End of variables declaration//GEN-END:variables
}
